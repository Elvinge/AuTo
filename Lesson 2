import pytest


@pytest.fixture
def test_environment(tmpdir):

    tmpdir.mkdir("dir1").join("file1.txt").write("Contents of file1.txt")
    tmpdir.mkdir("dir2").join("file2.txt").write("Contents of file2.txt")
    tmpdir.mkdir("empty_dir")

    return tmpdir


def test_list_files_command(test_environment, capsys):
    list_files_command(test_environment)

    captured = capsys.readouterr()
    output_lines = captured.out.splitlines()

    expected_files = ["dir1", "dir2", "empty_dir"]
    for expected_file in expected_files:
        assert expected_file in output_lines


def test_extract_with_paths_command(test_environment):
    extract_with_paths_command(test_environment)

    assert test_environment.join("dir1").join("file1.txt").read() == "Contents of file1.txt"
    assert test_environment.join("dir2").join("file2.txt").read() == "Contents of file2.txt"
    assert test_environment.join("empty_dir").check(dir=True)

if __name__ == "__main__":
    pytest.main()
